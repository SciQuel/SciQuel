openapi: 3.0.0
info:
  title: SciQuel Backend API
  version: 1.0.0
  description: Backend API for SciQuel Web Application
paths:
  /api/stories:
    get:
      tags:
        - Stories
      summary: Return a list of stories with pagination
      description: Return a list of stories given a page number and a page size
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          required: false
          description: Page number
        - in: query
          name: page_size
          schema:
            type: integer
            minimum: 1
            default: 10
          required: false
          description: Number of stories per page
        - in: query
          name: staff_pick
          schema:
            type: boolean
            default: false
          required: false
          description: Return only staff pick stories
      responses:
        "200":
          description: Successfully return a list of stories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Story"
        "400":
          description: User requested invalid page or page size
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad Request

  /api/stories/[year]/[month]/[day]/[slug]:
    get:
      tags:
        - Stories
      summary: Return a story given publish date and slug
      description: Return a story given year, month, day and slug
      parameters:
        - in: path
          name: year
          schema:
            type: string
            example: "2023"
          required: true
          description: Publish year
        - in: path
          name: month
          schema:
            type: string
            example: "01"
          required: true
          description: Publish month
        - in: path
          name: day
          schema:
            type: string
            example: "23"
          required: true
          description: Publish day of month
        - in: path
          name: slug
          schema:
            type: string
            example: lights-camera-action
          required: true
          description: Unique identifier of the page in the last part of URL address (ex. title)
      responses:
        "200":
          description: Successfully return a story
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Story"
        "400":
          description: User specified invalid path parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad Request
        "404":
          description: Cannot find story with given constraints
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Not Found

  /api/user/page_views:
    post:
      tags:
        - User
      summary: Record user page view activity
      description: Record the page view activity of a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                story_id:
                  type: string
                  example: "647ad74aa9efff3abe83045a"
                user_id:
                  type: string
                  example: "647ad6fda9efff3abe83044f"
      responses:
        "200":
          description: Successfully record the page view
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageView"
        "400":
          description: Request body is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad Request
        "404":
          description: story_id or user_id not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Story not found
        "500":
          description: Failed to insert record into database
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to create db entry

  /api/user/brains:
    post:
      tags:
        - User
      summary: User brain activity
      description: User hit brain button at the story
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                story_id:
                  type: string
                  example: "647ad74aa9efff3abe83045a"
                user_id:
                  type: string
                  example: "647ad6fda9efff3abe83044f"
      responses:
        "200":
          description: Successfully record the brain activity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Brain"
        "400":
          description: Request body is invalid, or try to record duplicate entries
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad Request
        "404":
          description: story_id or user_id not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Story not found
        "500":
          description: Failed to insert record into database
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to create db entry
    delete:
      tags:
        - User
      summary: User brain activity
      description: User undo hit brain button at the story
      parameters:
        - in: path
          name: story_id
          schema:
            type: string
            example: "647ad74aa9efff3abe83045a"
          required: true
          description: Story ID
        - in: path
          name: user_id
          schema:
            type: string
            example: "647ad6fda9efff3abe83044f"
          required: true
          description: User ID
      responses:
        "200":
          description: Successfully record the brain activity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Brain"
        "400":
          description: Query parameters are invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad Request
        "404":
          description: story_id or user_id not found, or brain activity not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Story not found
        "500":
          description: Failed to delete record from database
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to create db entry
components:
  schemas:
    Story:
      type: object
      properties:
        id:
          type: string
        storyType:
          $ref: "#/components/schemas/StoryType"
        title:
          type: string
        titleColor:
          type: string
        slug:
          type: string
        summary:
          type: string
        summaryColor:
          type: string
        tags:
          type: array
          items:
            $ref: "#/components/schemas/StoryTopic"
        storyContributions:
          type: array
          items:
            $ref: "#/components/schemas/StoryContribution"
        storyContent:
          type: array
          items:
            $ref: "#/components/schemas/StoryContent"
        published:
          type: boolean
        staffPick:
          type: boolean
        thumbnailUrl:
          type: string
        createdAt:
          type: string
          format: date-time
        publishedAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    StoryType:
      type: string
      enum:
        - ARTICLE
    StoryTopic:
      type: string
      enum:
        - ASTRONOMY
        - BIOLOGY
        - CHEMICAL_ENGINEERING
        - CHEMISTRY
        - COMPUTER_SCIENCE
        - ELECTRICAL_ENGINEERING
        - ENVIRONMENTAL_SCIENCE
        - GEOLOGY
        - MATHEMATICS
        - MECHANICAL_ENGINEERING
        - MEDICINE
        - PHYSICS
        - PSYCHOLOGY
        - SOCIOLOGY
        - TECHNOLOGY
    StoryContribution:
      type: object
      properties:
        id:
          type: string
        user:
          $ref: "#/components/schemas/User"
        userId:
          type: string
        story:
          $ref: "#/components/schemas/Story"
        storyId:
          type: string
        contributionType:
          $ref: "#/components/schemas/ContributionType"
    StoryContent:
      type: object
      properties:
        id:
          type: string
        story:
          $ref: "#/components/schemas/Story"
        storyId:
          type: string
        content:
          type: string
        createdAt:
          type: string
          format: date-time
    User:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        bio:
          type: string
        passwordHash:
          type: string
        joinedAt:
          type: string
          format: date-time
        storyContributions:
          type: array
          items:
            $ref: "#/components/schemas/StoryContribution"
    ContributionType:
      type: string
      enum:
        - AUTHOR
        - ILLUSTRATOR
        - ANIMATOR
    PageView:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        storyId:
          type: string
        createdAt:
          type: string
          format: date-time
    Brain:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        storyId:
          type: string
        createdAt:
          type: string
          format: date-time
